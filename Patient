package HospitalManagementSystem; // Declares the package for organizing related classes.

import java.sql.*; // Imports all classes from java.sql for database operations.
import java.util.Scanner; // Imports Scanner class for user input.

public class Patient { // Declares the public class named Patient.
    private Connection connection; // A private variable to hold the database connection.
    private Scanner scanner; // A private variable to read user input.

    // Constructor: accepts a database connection and scanner object
    public Patient(Connection connection, Scanner scanner){
        this.connection = connection; // Assigns the passed connection to the class variable.
        this.scanner = scanner; // Assigns the passed scanner to the class variable.
    }



    // Adds a new patient to the database
    public void addPatient(){
        System.out.print("Enter Patient Name: "); // Prompts for patient name.
        String name = scanner.next(); // Reads the patient's name.
        System.out.print("Enter Patient Age: "); // Prompts for patient age.
        int age = scanner.nextInt(); // Reads the patient's age.
        System.out.print("Enter Patient Gender: "); // Prompts for patient gender.
        String gender = scanner.next(); // Reads the patient's gender.

        try{
            // SQL query to insert a new patient
            String query = "INSERT INTO patients(name, age, gender) VALUES(?, ?, ?)";
            PreparedStatement preparedStatement = connection.prepareStatement(query); // Prepares the SQL query.
            preparedStatement.setString(1, name); // Sets the first placeholder (?) to name.
            preparedStatement.setInt(2, age); // Sets the second placeholder to age.
            preparedStatement.setString(3, gender); // Sets the third placeholder to gender.
            int affectedRows = preparedStatement.executeUpdate(); // Executes the insert and returns affected row count.

            if(affectedRows > 0){ // Checks if insert was successful.
                System.out.println("Patient Added Successfully!!"); // Success message.
            } else {
                System.out.println("Failed to add Patient!!"); // Failure message.
            }

        }catch (SQLException e){ // Catches SQL exceptions.
            e.printStackTrace(); // Prints exception details.
        }
    }

    // Displays all patients from the database in a table format
    public void viewPatients(){
        String query = "select * from patients"; // SQL query to fetch all patients.
        try{
            PreparedStatement preparedStatement = connection.prepareStatement(query); // Prepares the query.
            ResultSet resultSet = preparedStatement.executeQuery(); // Executes the query and stores results.

            System.out.println("Patients: "); // Header for output.
            System.out.println("+------------+--------------------+----------+------------+"); // Table border.
            System.out.println("| Patient Id | Name               | Age      | Gender     |"); // Table column titles.
            System.out.println("+------------+--------------------+----------+------------+"); // Table border.

            while(resultSet.next()){ // Iterates through each row of the result set.
                int id = resultSet.getInt("id"); // Gets patient ID from the row.
                String name = resultSet.getString("name"); // Gets name.
                int age = resultSet.getInt("age"); // Gets age.
                String gender = resultSet.getString("gender"); // Gets gender.

                // Prints the patient's info in table row format.
                System.out.printf("| %-10s | %-18s | %-8s | %-10s |\n", id, name, age, gender);
                System.out.println("+------------+--------------------+----------+------------+"); // Table row separator.
            }

        }catch (SQLException e){ // Catches SQL exceptions.
            e.printStackTrace(); // Prints exception details.
        }
    }

    // Checks if a patient exists based on their ID
    public boolean getPatientById(int id){
        String query = "SELECT * FROM patients WHERE id = ?"; // SQL query to select a patient by ID.
        try{
            PreparedStatement preparedStatement = connection.prepareStatement(query); // Prepares the query.
            preparedStatement.setInt(1, id); // Sets the ID parameter in the query.
            ResultSet resultSet = preparedStatement.executeQuery(); // Executes the query.

            return resultSet.next(); // Returns true if a matching patient is found.
        }catch (SQLException e){ // Catches SQL exceptions.
            e.printStackTrace(); // Prints exception details.
        }
        return false; // Returns false if patient not found or an exception occurred.
    }
}
